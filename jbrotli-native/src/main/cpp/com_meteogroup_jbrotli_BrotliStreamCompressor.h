/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_meteogroup_jbrotli_BrotliStreamCompressor */

#ifndef _Included_com_meteogroup_jbrotli_BrotliStreamCompressor
#define _Included_com_meteogroup_jbrotli_BrotliStreamCompressor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_meteogroup_jbrotli_BrotliStreamCompressor
 * Method:    initJavaFieldIdCache
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_meteogroup_jbrotli_BrotliStreamCompressor_initJavaFieldIdCache
  (JNIEnv *, jclass);

/*
 * Class:     com_meteogroup_jbrotli_BrotliStreamCompressor
 * Method:    getInputBlockSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_meteogroup_jbrotli_BrotliStreamCompressor_getInputBlockSize
  (JNIEnv *, jobject);

/*
 * Class:     com_meteogroup_jbrotli_BrotliStreamCompressor
 * Method:    initBrotliCompressor
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_com_meteogroup_jbrotli_BrotliStreamCompressor_initBrotliCompressor
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     com_meteogroup_jbrotli_BrotliStreamCompressor
 * Method:    freeNativeResources
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_meteogroup_jbrotli_BrotliStreamCompressor_freeNativeResources
  (JNIEnv *, jobject);

/*
 * Class:     com_meteogroup_jbrotli_BrotliStreamCompressor
 * Method:    compressBytes
 * Signature: ([BIIZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_meteogroup_jbrotli_BrotliStreamCompressor_compressBytes
  (JNIEnv *, jobject, jbyteArray, jint, jint, jboolean);

/*
 * Class:     com_meteogroup_jbrotli_BrotliStreamCompressor
 * Method:    compressByteBuffer
 * Signature: (Ljava/nio/ByteBuffer;IIZ)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_meteogroup_jbrotli_BrotliStreamCompressor_compressByteBuffer
  (JNIEnv *, jobject, jobject, jint, jint, jboolean);

#ifdef __cplusplus
}
#endif
#endif
